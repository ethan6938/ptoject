{"ast":null,"code":"var _jsxFileName = \"/Users/ethanhurwitz/tests/ptoject/project/nebula-notes/frontend/src/pages/Explore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Explore() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/notes').then(res => res.json()).then(setNotes);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Public Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"By: \", note.owner.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Explore, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = Explore;\nvar _c;\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Explore","_s","notes","setNotes","fetch","then","res","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","title","content","owner","username","_id","_c","$RefreshReg$"],"sources":["/Users/ethanhurwitz/tests/ptoject/project/nebula-notes/frontend/src/pages/Explore.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function Explore() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/notes')\n      .then(res => res.json())\n      .then(setNotes);\n  }, []);\n\n  return (\n    <div>\n      <h1>Public Notes</h1>\n      <ul>\n        {notes.map(note => (\n          <li key={note._id}>\n            <h3>{note.title}</h3>\n            <p>{note.content}</p>\n            <small>By: {note.owner.username}</small>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACF,QAAQ,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBb,OAAA;MAAAS,QAAA,EACGN,KAAK,CAACW,GAAG,CAACC,IAAI,iBACbf,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,EAAKM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBb,OAAA;UAAAS,QAAA,EAAIM,IAAI,CAACE;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBb,OAAA;UAAAS,QAAA,GAAO,MAAI,EAACM,IAAI,CAACG,KAAK,CAACC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHjCE,IAAI,CAACK,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CAvBuBD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}